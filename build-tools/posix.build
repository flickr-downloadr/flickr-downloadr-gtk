<?xml version="1.0" encoding="utf-8"?>
<project name="FlickrDownloadr" default="unitTestsOnly">

  <property name="project.name" value="flickr-downloadr" />
  <property name="project.build.type" value="Release" />

  <!-- Folder references -->
  <property name="working.dir" value="${path::get-full-path('..')}"/>
  <property name="build.tools.dir" value="${working.dir}/build-tools" />
  <property name="source.directory" value="${working.dir}/source" />
  <property name="bin.dir" value="${working.dir}/source/bin/${project.build.type}" />
  <property name="nunit.results.dir" value="${working.dir}/source/bin/NUnit" />
  <property name="secrets.out.file" value="${source.directory}/Secrets.cs" />

  <!-- Compilation settings -->
  <property name="flickrdownloadr.solution" value="FloydPink.Flickr.Downloadr.sln"/>
  <property name="flickrdownloadr.app.project" value="FloydPink.Flickr.Downloadr.UI/FloydPink.Flickr.Downloadr.UI.csproj"/>
  <property name="common.assembly.info" value="${source.directory}/CommonAssemblyInfo.cs" />

  <!-- Test references -->
  <property name="nunit.dir" value="${build.tools.dir}/nunit/NUnit.3.5.0" dynamic="true" />
  <property name="unittests.assembly" value="${bin.dir}/FloydPink.Flickr.Downloadr.UnitTests.exe" />
  <property name="boundarycrossingtests.assembly" value="${bin.dir}/FloydPink.Flickr.Downloadr.BoundaryCrossingTests.exe" />

  <loadtasks assembly="${build.tools.dir}/nant/nantcontrib-0.92/bin/NAnt.Contrib.Tasks.dll" />

  <!-- Common Targets -->
  <include buildfile="./common.build"/>

  <!-- Build Targets -->
  <target name="circleci" depends="unitTestsOnly, createinstallbuilderlicense, createrelease-mac, deploy" />
  <target name="wercker" depends="unitTestsOnly, createinstallbuilderlicense, createrelease-linux, deploy" />

  <target name="createrelease-win" depends="unitTestsOnly">
    <echo message="Creating the Windows installer for this release..." />
    <exec program="bash" workingdir="${build.tools.dir}" verbose="true">
      <environment>
        <variable name="BUILDNUMBER" value="${buildnumber.version}"/>
      </environment>
      <arg value="createRelease.sh" />
      <arg value="windows" />
    </exec>
  </target>

  <target name="createrelease-mac" depends="createmacappbundle">
    <echo message="Creating the Mac OS X installer for this release..." />
    <exec program="bash" workingdir="${build.tools.dir}" verbose="true">
      <environment>
        <variable name="BUILDNUMBER" value="${buildnumber.version}"/>
      </environment>
      <arg value="createRelease.sh" />
      <arg value="osx" />
    </exec>
  </target>

  <target name="createrelease-linux" depends="createlinuxbundle">
    <echo message="Creating the Linux installers for this release..." />
    <exec program="bash" workingdir="${build.tools.dir}" verbose="true">
      <environment>
        <variable name="BUILDNUMBER" value="${buildnumber.version}"/>
      </environment>
      <arg value="createRelease.sh" />
      <arg value="linux" />
    </exec>
    <exec program="bash" workingdir="${build.tools.dir}" verbose="true">
      <environment>
        <variable name="BUILDNUMBER" value="${buildnumber.version}"/>
      </environment>
      <arg value="createRelease.sh" />
      <arg value="linux-x64" />
    </exec>
    <exec program="bash" workingdir="${build.tools.dir}" verbose="true">
      <environment>
        <variable name="BUILDNUMBER" value="${buildnumber.version}"/>
      </environment>
      <arg value="createRelease.sh" />
      <arg value="deb" />
    </exec>
    <exec program="bash" workingdir="${build.tools.dir}" verbose="true">
      <environment>
        <variable name="BUILDNUMBER" value="${buildnumber.version}"/>
      </environment>
      <arg value="createRelease.sh" />
      <arg value="rpm" />
    </exec>
  </target>

  <target name="restorenugetpackages">
    <echo message="Downloading NuGet and restoring packages..." />
    <exec program="bash" workingdir="${build.tools.dir}" verbose="true">
      <environment>
        <variable name="BUILDNUMBER" value="${buildnumber.version}"/>
      </environment>
      <arg file="downloadNuget.sh" />
    </exec>
  </target>

  <target name="compilesolution" depends="cleanBin, createBin, increment-version, restorenugetpackages">
    <echo message="Compiling Solution:" />

    <exec program="msbuild" workingdir="${source.directory}"
      commandline='"${source.directory}/${flickrdownloadr.solution}" /p:Platform="x86" /p:Configuration=${project.build.type} /t:Rebuild /v:m' />
  </target>

  <target name="nunittest">
    <property name="nunittest.output.file.name" value="${path::get-file-name-without-extension(nunittest.testassemblypath)}.xml"/>
    <exec program="sudo" verbose="true">
      <arg value="mono ${nunit.dir}/nunit3-console.exe &quot;${nunittest.testassemblypath}&quot;"/>
    </exec>
  </target>

  <target name="deploy">
    <exec program="bash" workingdir="${build.tools.dir}" verbose="true">
      <environment>
        <variable name="BUILDNUMBER" value="${buildnumber.version}"/>
      </environment>
      <arg file="deploy.sh" />
    </exec>
  </target>

</project>
